.data 77
vector:     .ascii16 "IRENE PASCUAL." ;   0x0049, 0x0052, 0x0045, 0x004E, 0x0045, 0x0020, 0x0050, 0x0041, 0x0053, 0x0043, 0x0055, 0x0041, 0x004C, 0x002e;

.data91
cero:       .dw 0
letra:      .rw 1                   ;   char16_t letra;
const:      .dw 128                 ;   int cero = 0;
minuscula:  .dw 32                  ;   int const = 128;

.data91
letra:      .rw 1                   ;   char (donde iremos poniendo el ascii que queramos escribir)
cero:       .dw 0                   ;   int cero = 0
const:      .dw 128                 ;   int const = 128
minuscula:  .dw 32                  ;   int minuscula = 32
const2	    .dw 48		    ;	int const2 = 48
cont1	    .dw 0 		    ;   int cont1 =0
cont2	    .dw 0 		    ;   int cont2 = 0
uno	    .dw 1                   ;   int uno = 1
diez	    .dw 10 		    ;   int diez = 10

.data 127
tty_out:    .rw 1                   ;   direcciÃ³n de memoria donde imprimimos (tty_out)


.code
        mov cero, tty_out           ;   borra pantalla
        mov vector, letra           ;   letra=vector[0];
BUCLE:  cmp letra, punto            ;   while(letra!='.'){
        beq cont             	    ;	    (saltamos si se cumple)
        cmp letra, espacio          ;       if(letra!=' ' && pantalla != ' ' && pantalla != 0){  
        beq SALTO                   ;		(saltamos si se cumple)
        cmp tty_out, espacio        ;       
        beq SALTO                   ;		(saltamos si se cumple)
        cmp tty_out, cero           ;      
        beq SALTO                   ;		(saltamos si se cumple)
        add minuscula, letra        ;           letra=letra+32
                                    ;       }
SALTO:  mov letra, tty_out          ;       imprimir letra
        add const, INST1            ;       i++
INST1:  mov vector, letra           ;       letra=vector[i];
	add uno, cont1		    ;       cont1=cont1+uno
	cmp cont1, diez             ;       if(cont1!=diez){
	bneq SALTO2		    ;		(satamos si se cumple)
	mov cero, cont1             ;           cont1=cero
	add uno, cont2              ;           cont2=cont2+uno
                                    ;       }
SALTO2:	b BUCLE			    ;       saltamos
cont	add const2, cont2           ;       cont2=cont2+const2
	add const2, cont1           ;       cont1=cont1+const2
	mov espacio, tty_out        ;       imprimir espacio
	mov cont2, tty_out          ;       imprimir contador
	mov cont1, tty_out          ;
FIN:    b FIN        	            ;       fin
.end


10	1011011	1111111 --> aeff 
10	1001101	1011100 --> a6dc 
01	1011100	1011010 --> 6e5a 
11	0000000 0010100 --> c014  
01	1011100	1010010 --> 6e52  
11	0000000	0001011 --> c00b  
01	1010010 1111111 --> 697f  
11	0000000	0001011 --> c00b  
01      1001100 1111111 --> 6eff  
11	0000000 0001011 --> c00b  
00	1011110 1011100 --> 2f5c  
10	1011100 1111111 --> ae7f  
00	1011101 0001101 --> 2e8d  
10	1001101 1011100 --> a6dc  
00	1100010 1100000 --> 3160   
01	1100000 1100011 --> 7063  
11	1000000 0010011 --> e013    
10	1011011	1100000 --> ADE0  
00	1100010 1100001 --> 3161 
11	1100000	0000010 --> f002    
00	1011111 1100001 --> 2FE1
00	1011111	1100000 --> 2FE0
10	1010010 1111111 --> a97f
10	1100001 1111111 --> B0FF 
10	1100000 1111111 --> B07F
11	1100000 0011001 --> f019



